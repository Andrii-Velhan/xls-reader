{"version":3,"sources":["components/DragAndDrop/DragAndDrop.js","components/RenderTable/RenderTable.js","components/FileList.js","pages/HomePage.js"],"names":["DragAndDrop","state","drag","dropRef","React","createRef","handleDrag","e","preventDefault","stopPropagation","handleDragIn","dragCounter","dataTransfer","items","length","setState","handleDragOut","handleDrop","files","props","clearData","div","this","current","addEventListener","removeEventListener","filename","style","display","position","border","backgroundColor","ref","top","bottom","left","right","zIndex","textAlign","color","fontSize","children","Component","RenderTable","useState","setItems","id","type","onChange","file","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","target","result","wb","XLSX","wsname","SheetNames","ws","Sheets","data","sheet_to_json","document","getElementById","innerHTML","sheet_to_html","onerror","error","then","d","readExcel","FileList","fileList","i","name","push","eInput","minHeight","width","map","HomePage","movies","loading","a","console","log","className","Spinner"],"mappings":"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","file":"static/js/home-page.f5f23461.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { toast } from 'react-toastify';\nimport './DragAndDrop.css';\n// import PropTypes from 'prop-types';\n\nexport default class DragAndDrop extends Component {\n  state = {\n    drag: false,\n\t\t// filename: '',\n  };\n  dropRef = React.createRef();\n  handleDrag = e => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n  handleDragIn = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.dragCounter++;\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      this.setState({ drag: true });\n    }\n  };\n  handleDragOut = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.dragCounter--;\n    if (this.dragCounter === 0) {\n      this.setState({ drag: false });\n    }\n  };\n  handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.setState({ drag: false });\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      this.props.handleDrop(e.dataTransfer.files);\n\t\t\t// this.setState({ filename: e.dataTransfer.files.name });\n      e.dataTransfer.clearData();\n      this.dragCounter = 0;\n    }\n  };\n  componentDidMount() {\n    let div = this.dropRef.current;\n    div.addEventListener('dragenter', this.handleDragIn);\n    div.addEventListener('dragleave', this.handleDragOut);\n    div.addEventListener('dragover', this.handleDrag);\n    div.addEventListener('drop', this.handleDrop);\n  }\n  componentWillUnmount() {\n    let div = this.dropRef.current;\n    div.removeEventListener('dragenter', this.handleDragIn);\n    div.removeEventListener('dragleave', this.handleDragOut);\n    div.removeEventListener('dragover', this.handleDrag);\n    div.removeEventListener('drop', this.handleDrop);\n  }\n  render() {\n\t\tconst {drag, filename} = this.state;\n    return (\n      <div\n\t\t\t\tstyle={{display: 'inline-block', position: 'relative', border: '2px dashed red',\n\t\t\t\tbackgroundColor: 'rgba(200,255,255, 0.8)',}}\n        ref={this.dropRef}\n      >\n        {drag && (\n          <div \n\t\t\t\t\t// className={\n\t\t\t\t\t// \tdrag ? 'filedrop drag' : {filename} ? 'filedrop ready' : 'filedrop'\n\t\t\t\t\t// }\n            style={{\n              border: '4px dashed grey',\n              backgroundColor: 'rgba(200,255,255, 0.8)',\n              position: 'absolute',\n              top: 0,\n              bottom: 0,\n              left: 0,\n              right: 0,\n              zIndex: 9999,\n            }}\n          >\n            <div\n              style={{\n                position: 'absolute',\n                top: '50%',\n                right: 0,\n                left: 0,\n                textAlign: 'center',\n                color: 'grey',\n                fontSize: 36,\n              }}\n            >\n              <div>drop here :)</div>\n            </div>\n          </div>\n        )}\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\n//============= ==============\n\n// export default class FileInput extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//     this.fileInput = React.createRef();\n//   }\n//   handleSubmit(event) {\n//     event.preventDefault();\n//     alert(`Selected file - ${this.fileInput.current.files[0].name}`);\n//   }\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <label>\n//           Upload file:\n//           <input type=\"file\" ref={this.fileInput} />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Submit</button>\n//       </form>\n//     );\n//   }\n// }\n\n//================ ===============\n\n// export default class Searchbar extends Component {\n//   state = {\n//     value: '',\n//   };\n\n//   static propTypes = {\n//     onSubmit: PropTypes.func,\n//   };\n\n//   static defaultProps = {};\n\n//   handleChange = event => {\n//     this.setState({ value: event.currentTarget.value.toLowerCase() });\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     const { value } = this.state;\n\n//     if (value.trim() === '') {\n//       toast('Input data !!!');\n//       return;\n//     }\n\n//     this.props.onSubmit(value);\n//     this.setState({ value: '' });\n//   };\n\n//   render() {\n//     const { value } = this.state;\n//     return (\n//       <div className=\"Searchbar\">\n//         <form onSubmit={this.handleSubmit} className=\"SearchForm\">\n//           <input\n//             className=\"SearchFormInput\"\n//             type=\"file\"\n//             name=\"query\"\n//             value={value}\n//             onChange={this.handleChange}\n//             autoComplete=\"off\"\n//             autoFocus\n//           />\n//           {/* <button type=\"submit\" className=\"SearchFormButton\">\n//             Search\n//           </button> */}\n//         </form>\n//       </div>\n//     );\n//   }\n// }\n","import React, { useState } from \"react\";\r\nimport \"./RenderTable.css\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nfunction RenderTable() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  const readExcel = (file) => {\r\n    const promise = new Promise((resolve, reject) => {\r\n      const fileReader = new FileReader();\r\n      fileReader.readAsArrayBuffer(file);\r\n\r\n      fileReader.onload = (e) => {\r\n        const bufferArray = e.target.result;\r\n\r\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\r\n\r\n        const wsname = wb.SheetNames[0];\r\n\r\n        const ws = wb.Sheets[wsname];\r\n\r\n        const data = XLSX.utils.sheet_to_json(ws);\r\n\r\n\t\t\t\tvar container = document.getElementById('tableau');\r\n\t\t\t\t\tcontainer.innerHTML = XLSX.utils.sheet_to_html(ws);\r\n\r\n        resolve(data);\r\n      };\r\n\r\n      fileReader.onerror = (error) => {\r\n        reject(error);\r\n      };\r\n    });\r\n\r\n    promise.then((d) => {\r\n      setItems(d);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\t\t\t<h2>hello from render table</h2>\r\n\t\t\t<div id='tableau'></div>\r\n      <input\r\n        type=\"file\"\r\n        onChange={(e) => {\r\n          const file = e.target.files[0];\r\n          readExcel(file);\r\n        }}\r\n      />      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RenderTable;","import React, { Component } from 'react';\r\nimport DragAndDrop from '../components/DragAndDrop';\r\nimport RenderTable from '../components/RenderTable';\r\nimport * as XLSX from \"xlsx\";\r\n\r\nclass FileList extends Component {\r\n  state = {\r\n    files: [\r\n      // 'nice.pdf',\r\n      // 'verycool.jpg',\r\n      // 'amazing.png',\r\n      // 'goodstuff.mp3',\r\n      // 'thankyou.doc',\r\n    ],\r\n  };\r\n  handleDrop = files => {\r\n    let fileList = this.state.files;\r\n    for (var i = 0; i < files.length; i++) {\r\n      if (!files[i].name) return;\r\n      fileList.push(files[i].name);\r\n    }\r\n    this.setState({ files: fileList });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n\t\t\t<DragAndDrop eInput handleDrop={this.handleDrop}>\r\n\t\t\t<div style={{ minHeight: 300, width: 650 }}>\r\n\t\t\t\t{this.state.files.map(file => (\r\n\t\t\t\t\t<div>{file}</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</DragAndDrop>\r\n\t\t<RenderTable></RenderTable>\r\n\t\t</>\r\n    );\r\n  }\r\n}\r\nexport default FileList;\r\n","import React, { Component } from 'react';\r\n// import Axios from 'axios';\r\n// import themoviedbAPI from '../services/apiService';\r\nimport Spinner from '../components/Spinner/Spinner';\r\n// import { toast } from 'react-toastify';\r\n// import MovieList from '../components/MovieList';\r\nimport FileList from '../components/FileList';\r\n// import { Link } from 'react-router-dom';\r\n\r\n// https://developers.themoviedb.org/3/trending/get-trending\r\n\r\nexport class HomePage extends Component {\r\n  state = {\r\n    movies: [],\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // this.setState({ loading: true });\r\n    // themoviedbAPI\r\n    //   .fetchTrendingMovies()\r\n    //   .then(movieArray => this.setState({ movies: movieArray }))\r\n    //   .catch(error => {\r\n    //     toast.error(error.message);\r\n    //     this.setState({ error: error.message });\r\n    //   })\r\n    //   .finally(() => this.setState({ loading: false }));\r\n    // Axios.get('\r\n    // https://api.themoviedb.org/3/trending/all/day?api_key=66acb4573ba980ae8ac5981a52e8de6b');\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.props.match.url);\r\n\r\n    const { movies, loading } = this.state;\r\n    console.log(movies);\r\n\r\n    return (\r\n      <div className=\"Container\">\r\n        {/* <h1>Trending today</h1> */}\r\n        {/* {loading ? <Spinner /> : <MovieList movies={movies} />} */}\r\n        {loading ? <Spinner /> : <FileList />}\r\n\r\n        {/* {loading ? (\r\n          <Spinner />\r\n        ) : (\r\n          <ul>\r\n            {movies.map(movie => (\r\n              <li key={movie.id}>\r\n                <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n"],"sourceRoot":""}